version: 0.2

phases:
  install:
    commands:
      - echo Installing dependencies...
  pre_build:
    commands:
      - echo Assuming role...
      - >
        ROLE_CREDS=$(aws sts assume-role \
        --role-arn "arn:aws:iam::992382729083:role/sts-tenant-role" \
        --role-session-name "CodeBuildSession")
      - export AWS_ACCESS_KEY_ID=$(echo $ROLE_CREDS | jq -r '.Credentials.AccessKeyId')
      - export AWS_SECRET_ACCESS_KEY=$(echo $ROLE_CREDS | jq -r '.Credentials.SecretAccessKey')
      - export AWS_SESSION_TOKEN=$(echo $ROLE_CREDS | jq -r '.Credentials.SessionToken')

      - echo Setting AWS CLI configuration...
      - aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
      - aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
      - aws configure set aws_session_token $AWS_SESSION_TOKEN
      - aws configure set default.region <your-region>

  build:
    commands:
      - echo Creating AppSync API if it does not exist...
      - bash scripts/create-api.sh

      - echo Updating schema...
      - bash scripts/update-schema.sh

      - echo Creating or updating the data source...
      - bash scripts/create-update-data-source.sh

      - echo Updating request mapping templates...
      - bash scripts/update-request-mapping-template.sh

      - echo Updating response mapping templates...
      - bash scripts/update-response-mapping-template.sh

      - echo Updating Lambda authorizer...
      - bash scripts/update-lambda-authorizer.sh

artifacts:
  files:
    - src/update-appsync.yml
    - src/update-queries.yml
    - src/update-mutations.yml

# Use the custom Docker image
image: 992382729083.dkr.ecr.ap-south-1.amazonaws.com/codebuild-custom-aml2023:latest
