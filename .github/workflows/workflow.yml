name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker
        run: |
          sudo apt-get update
          sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
          sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
          sudo apt-get update
          sudo apt-get install -y docker-ce docker-ce-cli containerd.io
          sudo systemctl start docker
          sudo systemctl enable docker
        env:
          GH_TOKEN: ${{ secrets.XGITHUB_TOKEN }}  # Use GitHub token for authentication

      - name: Log in to Amazon ECR
        run: |
          aws ecr get-login-password --region ap-south-1 | sudo docker login --username AWS --password-stdin 992382729083.dkr.ecr.ap-south-1.amazonaws.com

      - name: Pull Docker Image
        run: |
          sudo docker pull 992382729083.dkr.ecr.ap-south-1.amazonaws.com/codebuild-custom-aml2023:latest

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-region: ap-south-1
          role-to-assume: arn:aws:iam::992382729083:role/GitHubActionsRole
          role-session-name: GitHubActionsSession
          audience: sts.amazonaws.com
        permissions:
          id-token: write
          contents: read

      - name: Run buildspec
        run: |
          docker run --rm -v $(pwd):/workspace -w /workspace 992382729083.dkr.ecr.ap-south-1.amazonaws.com/codebuild-custom-aml2023:latest /bin/bash -c "aws codebuild start-build --project-name AppSync-Build --source-version $GITHUB_SHA"

      - name: Post deployment status
        run: |
          if [ $? -eq 0 ]; then
            echo "✅ Deployment succeeded" | gh pr comment ${{ github.event.pull_request.number }} --body "$(printf '✅ Deployment succeeded')"
          else
            echo "❌ Deployment failed" | gh pr comment ${{ github.event.pull_request.number }} --body "$(printf '❌ Deployment failed')"
          fi
        env:
          GH_TOKEN: ${{ secrets.XGITHUB_TOKEN }}  # Use GitHub token for authentication
